2024-04-04 15:46:29.510814+03:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Parameter "#2" is not set; SQL statement:
        INSERT INTO users (id, login, password, age)
        VALUES (?,  [90012-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.expression.Parameter.checkSet(Parameter.java:75)
	at org.h2.command.Prepared.checkParameters(Prepared.java:207)
	at org.h2.command.CommandContainer.update(CommandContainer.java:159)
	at org.h2.command.Command.executeUpdate(Command.java:256)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:216)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:174)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$update$2(JdbcTemplate.java:975)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:658)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:970)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1014)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1024)
	at com.arakviel.persistence.repository.genericrepository.GenericRepository.insert(GenericRepository.java:85)
	at com.arakviel.persistence.repository.genericrepository.GenericRepository.save(GenericRepository.java:65)
	at com.arakviel.Main.pseudoTests(Main.java:34)
	at com.arakviel.Main.main(Main.java:18)
2024-04-04 15:47:49.890209+03:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Parameter "#2" is not set; SQL statement:
        INSERT INTO users (id, login, password, age)
        VALUES (?,  [90012-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.expression.Parameter.checkSet(Parameter.java:75)
	at org.h2.command.Prepared.checkParameters(Prepared.java:207)
	at org.h2.command.CommandContainer.update(CommandContainer.java:159)
	at org.h2.command.Command.executeUpdate(Command.java:256)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:216)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:174)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$update$2(JdbcTemplate.java:975)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:658)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:970)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1014)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1024)
	at com.arakviel.persistence.repository.genericrepository.GenericRepository.insert(GenericRepository.java:85)
	at com.arakviel.persistence.repository.genericrepository.GenericRepository.save(GenericRepository.java:65)
	at com.arakviel.Main.pseudoTests(Main.java:34)
	at com.arakviel.Main.main(Main.java:18)
2024-04-04 12:48:47 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:469)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-04-04 16:21:26.238866+03:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS posts(\000a    id              UUID PRIMARY KEY,\000a    title           VARCHAR(128) NOT NULL,\000a    body            TEXT NOT NULL,\000a    published_at    TIMESTAMP NULL,\000a    created_at      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,  -- Use CURRENT_TIMESTAMP for automatic date/time\000a    updated_at      TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,  -- Use ON UPDATE CURRENT_TIMESTAMP\000a[*])\000a"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS posts(
    id              UUID PRIMARY KEY,
    title           VARCHAR(128) NOT NULL,
    body            TEXT NOT NULL,
    published_at    TIMESTAMP NULL,
    created_at      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,  -- Use CURRENT_TIMESTAMP for automatic date/time
    updated_at      TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,  -- Use ON UPDATE CURRENT_TIMESTAMP
)
 [42001-224]
2024-04-04 13:31:30 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:469)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-04-04 13:31:33 jdbc[4]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:469)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-04-04 13:31:35 jdbc[5]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:469)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-04-04 16:38:44.158157+03:00 database: flush
org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: C:/Users/insid/Desktop/springcontextintro/db/blog.mv.db [2.2.224/7]" [50000-224]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:407)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:122)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:1546)
	at org.h2.mvstore.MVStore.panic(MVStore.java:371)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:291)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2035)
	at org.h2.mvstore.db.Store.<init>(Store.java:133)
	at org.h2.engine.Database.<init>(Database.java:326)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:343)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:125)
	at org.h2.Driver.connect(Driver.java:59)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:191)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:155)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:146)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:160)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:118)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:388)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:444)
	at com.arakviel.persistence.config.ConnectionManager.createUserTable(ConnectionManager.java:38)
	at com.arakviel.persistence.config.ConnectionManager.seed(ConnectionManager.java:21)
	at com.arakviel.persistence.config.ConnectionManager.<init>(ConnectionManager.java:17)
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:195)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:88)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.context.annotation.AnnotationConfigApplicationContext.<init>(AnnotationConfigApplicationContext.java:93)
	at com.arakviel.Main.main(Main.java:16)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: C:/Users/insid/Desktop/springcontextintro/db/blog.mv.db [2.2.224/7]" [50000-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:566)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 47 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: C:/Users/insid/Desktop/springcontextintro/db/blog.mv.db [2.2.224/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:996)
	at org.h2.mvstore.SingleFileStore.lockFileChannel(SingleFileStore.java:143)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:117)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:81)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:286)
	... 41 more
2024-04-04 13:38:56 jdbc[6]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:469)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-04-04 16:55:37.840943+03:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS posts(\000a    id              UUID PRIMARY KEY,\000a    user_id         UUID [*]FOREIGN KEY REFERENCES users(id),\000a    title           VARCHAR(128) NOT NULL,\000a    body            TEXT NOT NULL,\000a    published_at    TIMESTAMP NULL,\000a    created_at      TIMESTAMP NOT NULL,\000a    updated_at      TIMESTAMP NOT NULL\000a)\000a"; expected "ARRAY, INVISIBLE, VISIBLE, NOT NULL, DEFAULT, GENERATED, ON UPDATE, NOT NULL, DEFAULT ON NULL, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, COMMENT, PRIMARY KEY, UNIQUE, NOT NULL, CHECK, REFERENCES, ,, )"; SQL statement:
CREATE TABLE IF NOT EXISTS posts(
    id              UUID PRIMARY KEY,
    user_id         UUID FOREIGN KEY REFERENCES users(id),
    title           VARCHAR(128) NOT NULL,
    body            TEXT NOT NULL,
    published_at    TIMESTAMP NULL,
    created_at      TIMESTAMP NOT NULL,
    updated_at      TIMESTAMP NOT NULL
)
 [42001-224]
2024-04-04 17:02:26.438025+03:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Cannot drop "USERS" because "CONSTRAINT_48C" depends on it; SQL statement:
DROP TABLE IF EXISTS users [90107-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:644)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.command.ddl.DropTable.prepareDrop(DropTable.java:108)
	at org.h2.command.ddl.DropTable.update(DropTable.java:133)
	at org.h2.command.CommandContainer.update(CommandContainer.java:169)
	at org.h2.command.Command.executeUpdate(Command.java:256)
	at org.h2.command.CommandList.update(CommandList.java:65)
	at org.h2.command.Command.executeUpdate(Command.java:256)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:262)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at org.springframework.jdbc.core.JdbcTemplate$1ExecuteStatementCallback.doInStatement(JdbcTemplate.java:435)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:444)
	at com.arakviel.persistence.config.ConnectionManager.createUserTable(ConnectionManager.java:41)
	at com.arakviel.persistence.config.ConnectionManager.seed(ConnectionManager.java:23)
	at com.arakviel.persistence.config.ConnectionManager.<init>(ConnectionManager.java:19)
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:195)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:88)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.context.annotation.AnnotationConfigApplicationContext.<init>(AnnotationConfigApplicationContext.java:93)
	at com.arakviel.Main.main(Main.java:16)
2024-04-04 17:02:54.385577+03:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Cannot drop "USERS" because "CONSTRAINT_48C" depends on it; SQL statement:
DROP TABLE IF EXISTS users [90107-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:644)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.command.ddl.DropTable.prepareDrop(DropTable.java:108)
	at org.h2.command.ddl.DropTable.update(DropTable.java:133)
	at org.h2.command.CommandContainer.update(CommandContainer.java:169)
	at org.h2.command.Command.executeUpdate(Command.java:256)
	at org.h2.command.CommandList.update(CommandList.java:65)
	at org.h2.command.Command.executeUpdate(Command.java:256)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:262)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at org.springframework.jdbc.core.JdbcTemplate$1ExecuteStatementCallback.doInStatement(JdbcTemplate.java:435)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:444)
	at com.arakviel.persistence.config.ConnectionManager.createUserTable(ConnectionManager.java:40)
	at com.arakviel.persistence.config.ConnectionManager.seed(ConnectionManager.java:23)
	at com.arakviel.persistence.config.ConnectionManager.<init>(ConnectionManager.java:19)
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:195)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:88)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.context.annotation.AnnotationConfigApplicationContext.<init>(AnnotationConfigApplicationContext.java:93)
	at com.arakviel.Main.main(Main.java:16)
2024-04-04 17:03:35.390604+03:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS posts(\000a    id              UUID PRIMARY KEY,\000a    user_id         UUID,\000a    title           VARCHAR(128) NOT NULL,\000a    body            TEXT NOT NULL,\000a    published_at    TIMESTAMP NULL,\000a    created_at      TIMESTAMP NOT NULL,\000a    updated_at      TIMESTAMP NOT NULL,\000a    FOREIGN KEY(user_id) REFERENCES users(id) ON [*]CASCADE DELETE\000a);\000a"; expected "DELETE, UPDATE"; SQL statement:
CREATE TABLE IF NOT EXISTS posts(
    id              UUID PRIMARY KEY,
    user_id         UUID,
    title           VARCHAR(128) NOT NULL,
    body            TEXT NOT NULL,
    published_at    TIMESTAMP NULL,
    created_at      TIMESTAMP NOT NULL,
    updated_at      TIMESTAMP NOT NULL,
    FOREIGN KEY(user_id) REFERENCES users(id) ON CASCADE DELETE
);
 [42001-224]
2024-04-14 13:58:52 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:469)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-04-14 13:58:52 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:469)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-04-14 13:59:39 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:469)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-04-14 14:12:48 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:469)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-04-14 14:12:52 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:469)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-04-14 16:21:28.746653+02:00 database: flush
org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: C:/Users/zhenya/IdeaProjects/repository-pattern-with-spring-context-h2-jdbc-template/db/blog.mv.db [2.2.224/7]" [50000-224]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:407)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:122)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:1546)
	at org.h2.mvstore.MVStore.panic(MVStore.java:371)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:291)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2035)
	at org.h2.mvstore.db.Store.<init>(Store.java:133)
	at org.h2.engine.Database.<init>(Database.java:326)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:343)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:125)
	at org.h2.Driver.connect(Driver.java:59)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:191)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:155)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:146)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:160)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:118)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:342)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.tableAttributes(GenericRepositoryNew.java:134)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.<init>(GenericRepositoryNew.java:37)
	at com.arakviel.Main.genericRepositoryTest(Main.java:49)
	at com.arakviel.Main.main(Main.java:23)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: C:/Users/zhenya/IdeaProjects/repository-pattern-with-spring-context-h2-jdbc-template/db/blog.mv.db [2.2.224/7]" [50000-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:566)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 29 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: C:/Users/zhenya/IdeaProjects/repository-pattern-with-spring-context-h2-jdbc-template/db/blog.mv.db [2.2.224/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:996)
	at org.h2.mvstore.SingleFileStore.lockFileChannel(SingleFileStore.java:143)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:117)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:81)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:286)
	... 23 more
2024-04-14 16:33:33.790894+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "user" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:23)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:86)
	at com.arakviel.Main.genericRepositoryTest(Main.java:50)
	at com.arakviel.Main.main(Main.java:23)
2024-04-14 16:34:39.289670+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "user" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:23)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:50)
	at com.arakviel.Main.main(Main.java:23)
2024-04-14 16:35:32.567602+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "user" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:23)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:50)
	at com.arakviel.Main.main(Main.java:23)
2024-04-14 16:37:27.858849+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "user" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:23)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:50)
	at com.arakviel.Main.main(Main.java:23)
2024-04-14 16:38:22.281904+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "user" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:23)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:50)
	at com.arakviel.Main.main(Main.java:23)
2024-04-14 14:39:31 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:469)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-04-14 14:39:31 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "alter table POSTS\000a    alter column USER_ID rename to [*]USER"; expected "identifier"; SQL statement:
alter table POSTS
    alter column USER_ID rename to USER [42001-220]
2024-04-14 14:39:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "alter table POSTS\000a    alter column USER_ID rename to [*]USER"; expected "identifier"; SQL statement:
alter table POSTS
    alter column USER_ID rename to USER [42001-220]
2024-04-14 14:39:48 jdbc[4]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:469)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-04-14 16:40:26.110545+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "user" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:23)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:50)
	at com.arakviel.Main.main(Main.java:23)
2024-04-14 16:40:41.294951+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "user" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:23)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:50)
	at com.arakviel.Main.main(Main.java:23)
2024-04-14 16:40:48.053483+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "user" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:23)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:50)
	at com.arakviel.Main.main(Main.java:23)
2024-04-14 16:41:54.235745+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "login" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:23)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:50)
	at com.arakviel.Main.main(Main.java:23)
2024-04-14 16:42:20.888718+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "USER_NAME" not found; SQL statement:
        INSERT INTO USERS (id, USER_NAME, IS_ADMIN, REMARKS, ID, LOGIN, PASSWORD, AGE)
        VALUES (?, ?, ?, ?, ?, ?, ?, ?)
 [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:759)
	at org.h2.command.Parser.parseColumn(Parser.java:1190)
	at org.h2.command.Parser.parseColumnList(Parser.java:1175)
	at org.h2.command.Parser.parseInsert(Parser.java:1549)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:316)
	at org.springframework.jdbc.core.JdbcTemplate$SimplePreparedStatementCreator.createPreparedStatement(JdbcTemplate.java:1711)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:656)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:970)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1014)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1024)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.insert(GenericRepositoryNew.java:75)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.save(GenericRepositoryNew.java:96)
	at com.arakviel.Main.genericRepositoryTest(Main.java:60)
	at com.arakviel.Main.main(Main.java:23)
2024-04-14 16:42:28.470192+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "USER_NAME" not found; SQL statement:
        INSERT INTO USERS (id, USER_NAME, IS_ADMIN, REMARKS, ID, LOGIN, PASSWORD, AGE)
        VALUES (?, ?, ?, ?, ?, ?, ?, ?)
 [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:759)
	at org.h2.command.Parser.parseColumn(Parser.java:1190)
	at org.h2.command.Parser.parseColumnList(Parser.java:1175)
	at org.h2.command.Parser.parseInsert(Parser.java:1549)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:316)
	at org.springframework.jdbc.core.JdbcTemplate$SimplePreparedStatementCreator.createPreparedStatement(JdbcTemplate.java:1711)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:656)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:970)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1014)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1024)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.insert(GenericRepositoryNew.java:75)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.save(GenericRepositoryNew.java:96)
	at com.arakviel.Main.genericRepositoryTest(Main.java:60)
	at com.arakviel.Main.main(Main.java:23)
2024-04-14 16:45:40.894963+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "USER_NAME" not found; SQL statement:
        INSERT INTO USERS (id, USER_NAME, IS_ADMIN, REMARKS, ID, LOGIN, PASSWORD, AGE)
        VALUES (?, ?, ?, ?, ?, ?, ?, ?)
 [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:759)
	at org.h2.command.Parser.parseColumn(Parser.java:1190)
	at org.h2.command.Parser.parseColumnList(Parser.java:1175)
	at org.h2.command.Parser.parseInsert(Parser.java:1549)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:316)
	at org.springframework.jdbc.core.JdbcTemplate$SimplePreparedStatementCreator.createPreparedStatement(JdbcTemplate.java:1711)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:656)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:970)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1014)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1024)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.insert(GenericRepositoryNew.java:75)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.save(GenericRepositoryNew.java:96)
	at com.arakviel.Main.genericRepositoryTest(Main.java:60)
	at com.arakviel.Main.main(Main.java:23)
2024-04-14 16:49:21.752892+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Duplicate column name "ID"; SQL statement:
        INSERT INTO USERS (id, ID, LOGIN, PASSWORD, AGE)
        VALUES (?, ?, ?, ?, ?)
 [42121-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.parseColumnList(Parser.java:1177)
	at org.h2.command.Parser.parseInsert(Parser.java:1549)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:316)
	at org.springframework.jdbc.core.JdbcTemplate$SimplePreparedStatementCreator.createPreparedStatement(JdbcTemplate.java:1711)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:656)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:970)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1014)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1024)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.insert(GenericRepositoryNew.java:75)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.save(GenericRepositoryNew.java:96)
	at com.arakviel.Main.genericRepositoryTest(Main.java:60)
	at com.arakviel.Main.main(Main.java:23)
2024-04-14 16:56:29.665716+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Invalid value "5" for parameter "parameterIndex" [90008-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at org.h2.jdbc.JdbcPreparedStatement.setObject(JdbcPreparedStatement.java:509)
	at org.springframework.jdbc.core.StatementCreatorUtils.setValue(StatementCreatorUtils.java:453)
	at org.springframework.jdbc.core.StatementCreatorUtils.setParameterValueInternal(StatementCreatorUtils.java:247)
	at org.springframework.jdbc.core.StatementCreatorUtils.setParameterValue(StatementCreatorUtils.java:179)
	at org.springframework.jdbc.core.ArgumentPreparedStatementSetter.doSetValue(ArgumentPreparedStatementSetter.java:72)
	at org.springframework.jdbc.core.ArgumentPreparedStatementSetter.setValues(ArgumentPreparedStatementSetter.java:51)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$update$2(JdbcTemplate.java:973)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:658)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:970)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1014)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1024)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.insert(GenericRepositoryNew.java:75)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.save(GenericRepositoryNew.java:96)
	at com.arakviel.Main.genericRepositoryTest(Main.java:60)
	at com.arakviel.Main.main(Main.java:23)
2024-04-14 16:57:30.439938+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Invalid value "5" for parameter "parameterIndex" [90008-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at org.h2.jdbc.JdbcPreparedStatement.setObject(JdbcPreparedStatement.java:509)
	at org.springframework.jdbc.core.StatementCreatorUtils.setValue(StatementCreatorUtils.java:453)
	at org.springframework.jdbc.core.StatementCreatorUtils.setParameterValueInternal(StatementCreatorUtils.java:247)
	at org.springframework.jdbc.core.StatementCreatorUtils.setParameterValue(StatementCreatorUtils.java:179)
	at org.springframework.jdbc.core.ArgumentPreparedStatementSetter.doSetValue(ArgumentPreparedStatementSetter.java:72)
	at org.springframework.jdbc.core.ArgumentPreparedStatementSetter.setValues(ArgumentPreparedStatementSetter.java:51)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$update$2(JdbcTemplate.java:973)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:658)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:970)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1014)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1024)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.insert(GenericRepositoryNew.java:75)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.save(GenericRepositoryNew.java:96)
	at com.arakviel.Main.genericRepositoryTest(Main.java:60)
	at com.arakviel.Main.main(Main.java:23)
2024-04-14 16:59:19.913819+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Invalid value "5" for parameter "parameterIndex" [90008-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at org.h2.jdbc.JdbcPreparedStatement.setObject(JdbcPreparedStatement.java:509)
	at org.springframework.jdbc.core.StatementCreatorUtils.setValue(StatementCreatorUtils.java:453)
	at org.springframework.jdbc.core.StatementCreatorUtils.setParameterValueInternal(StatementCreatorUtils.java:247)
	at org.springframework.jdbc.core.StatementCreatorUtils.setParameterValue(StatementCreatorUtils.java:179)
	at org.springframework.jdbc.core.ArgumentPreparedStatementSetter.doSetValue(ArgumentPreparedStatementSetter.java:72)
	at org.springframework.jdbc.core.ArgumentPreparedStatementSetter.setValues(ArgumentPreparedStatementSetter.java:51)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$update$2(JdbcTemplate.java:973)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:658)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:970)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1014)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1024)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.insert(GenericRepositoryNew.java:75)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.save(GenericRepositoryNew.java:96)
	at com.arakviel.Main.genericRepositoryTest(Main.java:60)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 11:12:27.034211+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Invalid value "5" for parameter "parameterIndex" [90008-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at org.h2.jdbc.JdbcPreparedStatement.setObject(JdbcPreparedStatement.java:509)
	at org.springframework.jdbc.core.StatementCreatorUtils.setValue(StatementCreatorUtils.java:453)
	at org.springframework.jdbc.core.StatementCreatorUtils.setParameterValueInternal(StatementCreatorUtils.java:247)
	at org.springframework.jdbc.core.StatementCreatorUtils.setParameterValue(StatementCreatorUtils.java:179)
	at org.springframework.jdbc.core.ArgumentPreparedStatementSetter.doSetValue(ArgumentPreparedStatementSetter.java:72)
	at org.springframework.jdbc.core.ArgumentPreparedStatementSetter.setValues(ArgumentPreparedStatementSetter.java:51)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$update$2(JdbcTemplate.java:973)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:658)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:970)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1014)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1024)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.insert(GenericRepositoryNew.java:75)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.save(GenericRepositoryNew.java:96)
	at com.arakviel.Main.genericRepositoryTest(Main.java:60)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 11:13:04.842077+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Invalid value "5" for parameter "parameterIndex" [90008-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at org.h2.jdbc.JdbcPreparedStatement.setObject(JdbcPreparedStatement.java:509)
	at org.springframework.jdbc.core.StatementCreatorUtils.setValue(StatementCreatorUtils.java:453)
	at org.springframework.jdbc.core.StatementCreatorUtils.setParameterValueInternal(StatementCreatorUtils.java:247)
	at org.springframework.jdbc.core.StatementCreatorUtils.setParameterValue(StatementCreatorUtils.java:179)
	at org.springframework.jdbc.core.ArgumentPreparedStatementSetter.doSetValue(ArgumentPreparedStatementSetter.java:72)
	at org.springframework.jdbc.core.ArgumentPreparedStatementSetter.setValues(ArgumentPreparedStatementSetter.java:51)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$update$2(JdbcTemplate.java:973)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:658)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:970)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1014)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1024)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.insert(GenericRepositoryNew.java:75)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.save(GenericRepositoryNew.java:96)
	at com.arakviel.Main.genericRepositoryTest(Main.java:60)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 11:13:10.156498+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Invalid value "5" for parameter "parameterIndex" [90008-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at org.h2.jdbc.JdbcPreparedStatement.setObject(JdbcPreparedStatement.java:509)
	at org.springframework.jdbc.core.StatementCreatorUtils.setValue(StatementCreatorUtils.java:453)
	at org.springframework.jdbc.core.StatementCreatorUtils.setParameterValueInternal(StatementCreatorUtils.java:247)
	at org.springframework.jdbc.core.StatementCreatorUtils.setParameterValue(StatementCreatorUtils.java:179)
	at org.springframework.jdbc.core.ArgumentPreparedStatementSetter.doSetValue(ArgumentPreparedStatementSetter.java:72)
	at org.springframework.jdbc.core.ArgumentPreparedStatementSetter.setValues(ArgumentPreparedStatementSetter.java:51)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$update$2(JdbcTemplate.java:973)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:658)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:970)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1014)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1024)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.insert(GenericRepositoryNew.java:75)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.save(GenericRepositoryNew.java:96)
	at com.arakviel.Main.genericRepositoryTest(Main.java:60)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 11:13:15.364913+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Invalid value "5" for parameter "parameterIndex" [90008-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at org.h2.jdbc.JdbcPreparedStatement.setObject(JdbcPreparedStatement.java:509)
	at org.springframework.jdbc.core.StatementCreatorUtils.setValue(StatementCreatorUtils.java:453)
	at org.springframework.jdbc.core.StatementCreatorUtils.setParameterValueInternal(StatementCreatorUtils.java:247)
	at org.springframework.jdbc.core.StatementCreatorUtils.setParameterValue(StatementCreatorUtils.java:179)
	at org.springframework.jdbc.core.ArgumentPreparedStatementSetter.doSetValue(ArgumentPreparedStatementSetter.java:72)
	at org.springframework.jdbc.core.ArgumentPreparedStatementSetter.setValues(ArgumentPreparedStatementSetter.java:51)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$update$2(JdbcTemplate.java:973)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:658)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:970)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1014)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1024)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.insert(GenericRepositoryNew.java:75)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.save(GenericRepositoryNew.java:96)
	at com.arakviel.Main.genericRepositoryTest(Main.java:60)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 11:13:45.963624+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Invalid value "5" for parameter "parameterIndex" [90008-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at org.h2.jdbc.JdbcPreparedStatement.setObject(JdbcPreparedStatement.java:509)
	at org.springframework.jdbc.core.StatementCreatorUtils.setValue(StatementCreatorUtils.java:453)
	at org.springframework.jdbc.core.StatementCreatorUtils.setParameterValueInternal(StatementCreatorUtils.java:247)
	at org.springframework.jdbc.core.StatementCreatorUtils.setParameterValue(StatementCreatorUtils.java:179)
	at org.springframework.jdbc.core.ArgumentPreparedStatementSetter.doSetValue(ArgumentPreparedStatementSetter.java:72)
	at org.springframework.jdbc.core.ArgumentPreparedStatementSetter.setValues(ArgumentPreparedStatementSetter.java:51)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$update$2(JdbcTemplate.java:973)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:658)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:970)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1014)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1024)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.insert(GenericRepositoryNew.java:75)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.save(GenericRepositoryNew.java:96)
	at com.arakviel.Main.genericRepositoryTest(Main.java:60)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 11:13:59.359452+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Invalid value "5" for parameter "parameterIndex" [90008-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at org.h2.jdbc.JdbcPreparedStatement.setObject(JdbcPreparedStatement.java:509)
	at org.springframework.jdbc.core.StatementCreatorUtils.setValue(StatementCreatorUtils.java:453)
	at org.springframework.jdbc.core.StatementCreatorUtils.setParameterValueInternal(StatementCreatorUtils.java:247)
	at org.springframework.jdbc.core.StatementCreatorUtils.setParameterValue(StatementCreatorUtils.java:179)
	at org.springframework.jdbc.core.ArgumentPreparedStatementSetter.doSetValue(ArgumentPreparedStatementSetter.java:72)
	at org.springframework.jdbc.core.ArgumentPreparedStatementSetter.setValues(ArgumentPreparedStatementSetter.java:51)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$update$2(JdbcTemplate.java:973)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:658)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:970)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1014)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1024)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.insert(GenericRepositoryNew.java:75)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.save(GenericRepositoryNew.java:96)
	at com.arakviel.Main.genericRepositoryTest(Main.java:60)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 11:14:47.361243+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Invalid value "5" for parameter "parameterIndex" [90008-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at org.h2.jdbc.JdbcPreparedStatement.setObject(JdbcPreparedStatement.java:509)
	at org.springframework.jdbc.core.StatementCreatorUtils.setValue(StatementCreatorUtils.java:453)
	at org.springframework.jdbc.core.StatementCreatorUtils.setParameterValueInternal(StatementCreatorUtils.java:247)
	at org.springframework.jdbc.core.StatementCreatorUtils.setParameterValue(StatementCreatorUtils.java:179)
	at org.springframework.jdbc.core.ArgumentPreparedStatementSetter.doSetValue(ArgumentPreparedStatementSetter.java:72)
	at org.springframework.jdbc.core.ArgumentPreparedStatementSetter.setValues(ArgumentPreparedStatementSetter.java:51)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$update$2(JdbcTemplate.java:973)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:658)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:970)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1014)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1024)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.insert(GenericRepositoryNew.java:75)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.save(GenericRepositoryNew.java:96)
	at com.arakviel.Main.genericRepositoryTest(Main.java:60)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 12:38:21.808565+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Invalid value "5" for parameter "parameterIndex" [90008-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at org.h2.jdbc.JdbcPreparedStatement.setObject(JdbcPreparedStatement.java:509)
	at org.springframework.jdbc.core.StatementCreatorUtils.setValue(StatementCreatorUtils.java:453)
	at org.springframework.jdbc.core.StatementCreatorUtils.setParameterValueInternal(StatementCreatorUtils.java:247)
	at org.springframework.jdbc.core.StatementCreatorUtils.setParameterValue(StatementCreatorUtils.java:179)
	at org.springframework.jdbc.core.ArgumentPreparedStatementSetter.doSetValue(ArgumentPreparedStatementSetter.java:72)
	at org.springframework.jdbc.core.ArgumentPreparedStatementSetter.setValues(ArgumentPreparedStatementSetter.java:51)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$update$2(JdbcTemplate.java:973)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:658)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:970)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1014)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1024)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.insert(GenericRepositoryNew.java:75)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.save(GenericRepositoryNew.java:96)
	at com.arakviel.Main.genericRepositoryTest(Main.java:60)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:05:24.362356+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "UUID, INTEGER"; SQL statement:
      UPDATE USERS
         SET LOGIN = ?, PASSWORD = ?, AGE = ?
       WHERE  [22018-224]
2024-04-15 13:06:19.366315+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "UUID, INTEGER"; SQL statement:
      UPDATE USERS
         SET LOGIN = ?, PASSWORD = ?, AGE = ?
       WHERE  [22018-224]
2024-04-15 13:08:57.924265+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "user" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:23)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:80)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:09:57.794699+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "user" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:23)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:80)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:10:26.668413+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "user" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:23)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:80)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:13:01.821180+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "user" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:23)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:80)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:14:42.553184+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: The database is open in exclusive mode; can not open additional connections [90135-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:690)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.engine.SessionLocal.checkSuspended(SessionLocal.java:1254)
	at org.h2.engine.SessionLocal.transitionToState(SessionLocal.java:1246)
	at org.h2.engine.SessionLocal.waitIfExclusiveModeEnabled(SessionLocal.java:1494)
	at org.h2.command.Command.executeQuery(Command.java:182)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:101)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:463)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:50)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:15:34.540094+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "user" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:23)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:80)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:20:52.215673+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "user" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:23)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:80)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:22:08.726734+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "user" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:23)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:80)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:32:15.691043+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "user" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:23)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:80)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:33:24.680685+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "publishedAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:25)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:80)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:33:24.685686+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "createdAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:25)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:80)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:33:24.686686+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "updatedAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:25)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:80)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:33:26.806642+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "publishedAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:25)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:80)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:33:26.807641+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "createdAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:25)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:80)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:33:26.809641+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "updatedAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:25)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:80)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:33:28.240551+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "publishedAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:25)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:80)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:33:28.241550+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "createdAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:25)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:80)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:33:28.243550+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "updatedAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:25)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:80)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:33:29.108481+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "publishedAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:25)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:80)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:33:29.110467+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "createdAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:25)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:80)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:33:29.111389+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "updatedAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:25)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:80)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:34:49.489963+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "publishedAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:25)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:80)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:34:49.494962+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "createdAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:25)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:80)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:34:49.495962+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "updatedAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:25)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:80)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:34:49.497962+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "publishedAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:25)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:80)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:34:49.498962+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "createdAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:25)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:80)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:34:49.500962+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "updatedAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:25)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:80)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:34:49.501962+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "publishedAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:25)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:80)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:34:49.503962+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "createdAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:25)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:80)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:34:49.504962+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "updatedAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:25)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:80)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:34:49.506962+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "publishedAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:25)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:80)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:34:49.507962+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "createdAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:25)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:80)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:34:49.508962+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "updatedAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:25)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:80)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:35:42.303074+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "publishedAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:25)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:80)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:35:42.305075+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "createdAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:25)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:80)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:35:42.306077+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "updatedAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:25)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:80)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:35:42.306077+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "publishedAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:25)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:80)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:35:42.307074+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "createdAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:25)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:80)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:35:42.307074+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "updatedAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:25)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:80)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:35:42.308075+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "publishedAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:25)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:80)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:35:42.308075+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "createdAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:25)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:80)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:35:42.308075+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "updatedAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:25)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:80)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:35:42.309075+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "publishedAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:25)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:80)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:35:42.309075+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "createdAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:25)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:80)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:35:42.309075+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "updatedAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:25)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:9)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:85)
	at com.arakviel.Main.genericRepositoryTest(Main.java:80)
	at com.arakviel.Main.main(Main.java:23)
2024-04-15 13:40:38.100538+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "publishedAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:26)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:10)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:87)
	at com.arakviel.Main.genericRepositoryTest(Main.java:78)
	at com.arakviel.Main.main(Main.java:21)
2024-04-15 13:40:38.102539+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "createdAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:26)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:10)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:87)
	at com.arakviel.Main.genericRepositoryTest(Main.java:78)
	at com.arakviel.Main.main(Main.java:21)
2024-04-15 13:40:38.103539+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "updatedAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:26)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:10)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:87)
	at com.arakviel.Main.genericRepositoryTest(Main.java:78)
	at com.arakviel.Main.main(Main.java:21)
2024-04-15 13:40:38.103539+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "publishedAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:26)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:10)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:87)
	at com.arakviel.Main.genericRepositoryTest(Main.java:78)
	at com.arakviel.Main.main(Main.java:21)
2024-04-15 13:40:38.104540+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "createdAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:26)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:10)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:87)
	at com.arakviel.Main.genericRepositoryTest(Main.java:78)
	at com.arakviel.Main.main(Main.java:21)
2024-04-15 13:40:38.104540+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "updatedAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:26)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:10)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:87)
	at com.arakviel.Main.genericRepositoryTest(Main.java:78)
	at com.arakviel.Main.main(Main.java:21)
2024-04-15 13:40:38.104540+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "publishedAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:26)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:10)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:87)
	at com.arakviel.Main.genericRepositoryTest(Main.java:78)
	at com.arakviel.Main.main(Main.java:21)
2024-04-15 13:40:38.105538+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "createdAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:26)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:10)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:87)
	at com.arakviel.Main.genericRepositoryTest(Main.java:78)
	at com.arakviel.Main.main(Main.java:21)
2024-04-15 13:40:38.105538+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "updatedAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:26)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:10)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:87)
	at com.arakviel.Main.genericRepositoryTest(Main.java:78)
	at com.arakviel.Main.main(Main.java:21)
2024-04-15 13:40:38.106540+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "publishedAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:26)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:10)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:87)
	at com.arakviel.Main.genericRepositoryTest(Main.java:78)
	at com.arakviel.Main.main(Main.java:21)
2024-04-15 13:40:38.106540+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "createdAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:26)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:10)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:87)
	at com.arakviel.Main.genericRepositoryTest(Main.java:78)
	at com.arakviel.Main.main(Main.java:21)
2024-04-15 13:40:38.107539+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "updatedAt" not found [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:562)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:26)
	at com.arakviel.persistence.repository.GenericRowMapperNew.mapRow(GenericRowMapperNew.java:10)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:94)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:61)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:464)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:476)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:486)
	at com.arakviel.persistence.repository.genericrepository.GenericRepositoryNew.findAll(GenericRepositoryNew.java:87)
	at com.arakviel.Main.genericRepositoryTest(Main.java:78)
	at com.arakviel.Main.main(Main.java:21)
2024-04-15 11:41:07 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:469)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
